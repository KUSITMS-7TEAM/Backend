name: Build and Deploy Spring Boot to AWS EC2

on:
  push:
    branches: [ main ]

env:
  PROJECT_NAME: tikkeul-server
  BUCKET_NAME: github-actions-s3-bucket-ec2
  CODE_DEPLOY_APP_NAME: codedeploy-app
  DEPLOYMENT_GROUP_NAME: codedeploy-deployment-group

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Set Yaml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application.yml
        env:
          spring.datasource.url: jdbc:mysql://${{ secrets.DATABASE_URL }}:3306/rds?autoReconnect=true&serverTimezone=Asia/Seoul
          spring.datasource.username: ${{ secrets.DATABASE_ID }}
          spring.datasource.password: ${{ secrets.DATABASE_PASSWORD }}
          jwt.secret: ${{ secrets.SECRET_KEY }}
          cloud.aws.credentials.accessKey: ${{ secrets.S3_ACCESS_KEY }}
          cloud.aws.credentials.secretKey: ${{ secrets.S3_SECRET_KEY }}
          cloud.aws.s3.bucket: ${{ secrets.S3_BUCKET }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: finit
          mysql user: root
          mysql password: ${{ secrets.DATABASE_PASSWORD }}

      - name: Build with Gradle
        run: ./gradlew build
        shell: bash

      - name: Make Zip File
        run: zip -qq -r ./$GITHUB_SHA.zip .
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$GITHUB_SHA.zip s3://$BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip

      - name: Code Deploy
        run: aws deploy create-deployment --application-name $CODE_DEPLOY_APP_NAME --deployment-config-name CodeDeployDefault.OneAtATime --deployment-group-name $DEPLOYMENT_GROUP_NAME --s3-location bucket=$BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip
